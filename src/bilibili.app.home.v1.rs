// This file is @generated by prost-build.
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ArcContentPool {
    ///
    #[prost(message, repeated, tag = "1")]
    pub show_arcs: ::prost::alloc::vec::Vec<ArcInfo>,
    ///
    #[prost(message, repeated, tag = "2")]
    pub backup_arcs: ::prost::alloc::vec::Vec<ArcInfo>,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ArcInfo {
    ///
    #[prost(message, optional, tag = "1")]
    pub rec_meta: ::core::option::Option<RecentRecommendMetaInfo>,
    ///
    #[prost(int64, tag = "2")]
    pub duration_sec: i64,
    ///
    #[prost(int64, tag = "3")]
    pub progress_sec: i64,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Badge {
    ///
    #[prost(string, tag = "1")]
    pub text: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub text_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub text_color_night: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub bg_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub bg_color_night: ::prost::alloc::string::String,
    ///
    #[prost(enumeration = "BgStyle", tag = "6")]
    pub bg_style: i32,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FavContentPool {
    ///
    #[prost(message, repeated, tag = "1")]
    pub show_favs: ::prost::alloc::vec::Vec<FavInfo>,
    ///
    #[prost(message, repeated, tag = "2")]
    pub backup_favs: ::prost::alloc::vec::Vec<FavInfo>,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FavInfo {
    ///
    #[prost(message, optional, tag = "1")]
    pub rec_meta: ::core::option::Option<RecentRecommendMetaInfo>,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct HalfWatchedVideo {
    ///
    #[prost(message, optional, tag = "1")]
    pub module_info: ::core::option::Option<ModuleInfo>,
    ///
    #[prost(message, optional, tag = "2")]
    pub arc_content_pool: ::core::option::Option<ArcContentPool>,
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct HomePopupReq {
    ///
    #[prost(bool, tag = "1")]
    pub cold_start: bool,
    ///
    #[prost(message, optional, tag = "2")]
    pub rupcp: ::core::option::Option<RemindUsePcClientPopupParams>,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct HomePopupRes {
    ///
    #[prost(message, optional, tag = "1")]
    pub remind_use_pc_client: ::core::option::Option<PopupBasicInfo>,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct IconItem {
    ///
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub icon: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub name: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "5")]
    pub red_dot: ::core::option::Option<RedDot>,
    ///
    #[prost(bool, tag = "6")]
    pub fixure: bool,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MineSelection {
    ///
    #[prost(message, repeated, tag = "1")]
    pub items: ::prost::alloc::vec::Vec<IconItem>,
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct MineSelectionContentReq {}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MineSelectionContentRes {
    ///
    #[prost(message, optional, tag = "1")]
    pub mine_selection: ::core::option::Option<MineSelection>,
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct MineSelectionOptionItemsReq {}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MineSelectionOptionItemsRes {
    ///
    #[prost(message, repeated, tag = "1")]
    pub sections: ::prost::alloc::vec::Vec<SimpleMineSection>,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MineSelectionOptionUpdateReq {
    ///
    #[prost(int64, repeated, tag = "1")]
    pub item_ids: ::prost::alloc::vec::Vec<i64>,
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct MineSelectionOptionUpdateRes {}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ModuleInfo {
    ///
    #[prost(message, optional, tag = "1")]
    pub more: ::core::option::Option<More>,
    ///
    #[prost(string, tag = "2")]
    pub title: ::prost::alloc::string::String,
    ///
    #[prost(int64, tag = "3")]
    pub pos: i64,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct More {
    ///
    #[prost(string, tag = "1")]
    pub name: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub icon: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub url: ::prost::alloc::string::String,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PopupBasicInfo {
    ///
    #[prost(string, tag = "1")]
    pub title: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub subtitle: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub icon: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "4")]
    pub confirm_button: ::core::option::Option<PopupButton>,
    ///
    #[prost(message, optional, tag = "5")]
    pub cancel_button: ::core::option::Option<PopupButton>,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PopupButton {
    ///
    #[prost(string, tag = "1")]
    pub text: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub url: ::prost::alloc::string::String,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RecentFav {
    ///
    #[prost(message, optional, tag = "1")]
    pub module_info: ::core::option::Option<ModuleInfo>,
    ///
    #[prost(message, optional, tag = "3")]
    pub fav_content_pool: ::core::option::Option<FavContentPool>,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RecentRecommendMetaInfo {
    ///
    #[prost(int64, tag = "1")]
    pub id: i64,
    ///
    #[prost(string, tag = "2")]
    pub cover: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub title: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub add_time: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub url: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "6")]
    pub badge: ::core::option::Option<Badge>,
    ///
    #[prost(enumeration = "RecType", tag = "7")]
    pub rec_type: i32,
    ///
    #[prost(enumeration = "RecentRecReasonEnum", tag = "8")]
    pub rec_reason_enum: i32,
    ///
    #[prost(string, tag = "9")]
    pub sub_title: ::prost::alloc::string::String,
    ///
    #[prost(int64, tag = "10")]
    pub add_time_sec: i64,
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct RecentReq {
    ///
    #[prost(message, optional, tag = "1")]
    pub player_args: ::core::option::Option<
        super::super::archive::middleware::v1::PlayerArgs,
    >,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RecentRes {
    ///
    #[prost(message, optional, tag = "1")]
    pub mine_selection: ::core::option::Option<MineSelection>,
    ///
    #[prost(message, optional, tag = "2")]
    pub recent_used: ::core::option::Option<RecentUsed>,
    ///
    #[prost(message, optional, tag = "3")]
    pub half_watched_videos: ::core::option::Option<HalfWatchedVideo>,
    ///
    #[prost(message, optional, tag = "4")]
    pub to_view: ::core::option::Option<ToView>,
    ///
    #[prost(message, optional, tag = "5")]
    pub recent_fav: ::core::option::Option<RecentFav>,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RecentUsed {
    ///
    #[prost(message, optional, tag = "1")]
    pub module_info: ::core::option::Option<ModuleInfo>,
    ///
    #[prost(message, repeated, tag = "2")]
    pub items: ::prost::alloc::vec::Vec<IconItem>,
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct RedDot {
    ///
    #[prost(bool, tag = "1")]
    pub show: bool,
    ///
    #[prost(int64, tag = "2")]
    pub num: i64,
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct RemindUsePcClientPopupParams {
    ///
    #[prost(bool, tag = "1")]
    pub has_installed_pc_client: bool,
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct RemoveVideoReq {
    ///
    #[prost(enumeration = "ModuleType", tag = "1")]
    pub module_type: i32,
    ///
    #[prost(int64, tag = "2")]
    pub id: i64,
    ///
    #[prost(enumeration = "RecentRecReasonEnum", tag = "3")]
    pub rec_reason_enum: i32,
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct RemoveVideoRes {}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SimpleMineSection {
    ///
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    ///
    #[prost(message, repeated, tag = "3")]
    pub items: ::prost::alloc::vec::Vec<IconItem>,
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct TabExtraInfo {
    ///
    #[prost(bool, tag = "1")]
    pub switch_to_mine_config_bubble: bool,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ToView {
    ///
    #[prost(message, optional, tag = "1")]
    pub module_info: ::core::option::Option<ModuleInfo>,
    ///
    #[prost(message, optional, tag = "2")]
    pub arc_content_pool: ::core::option::Option<ArcContentPool>,
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct TopLeftTabReq {}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TopLeftTabRes {
    ///
    #[prost(int32, repeated, tag = "1")]
    pub tabs: ::prost::alloc::vec::Vec<i32>,
    ///
    #[prost(enumeration = "Tab", tag = "2")]
    pub default_tab: i32,
    ///
    #[prost(message, optional, tag = "3")]
    pub extra: ::core::option::Option<TabExtraInfo>,
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct TopLeftTabUpdateReq {
    ///
    #[prost(enumeration = "TopLeftGoto", tag = "1")]
    pub tab_goto: i32,
    ///
    #[prost(enumeration = "TabSelection", tag = "2")]
    pub tab_selection: i32,
    ///
    #[prost(enumeration = "TabUpdateSource", tag = "3")]
    pub source: i32,
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct TopLeftTabUpdateRes {}
///
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum BgStyle {
    ///
    Unknown = 0,
    ///
    Fill = 1,
    ///
    Stroke = 2,
    ///
    FillAndStroke = 3,
    ///
    NoFillAndNoStroke = 4,
}
impl BgStyle {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unknown => "BG_STYLE_UNKNOWN",
            Self::Fill => "BG_STYLE_FILL",
            Self::Stroke => "BG_STYLE_STROKE",
            Self::FillAndStroke => "BG_STYLE_FILL_AND_STROKE",
            Self::NoFillAndNoStroke => "BG_STYLE_NO_FILL_AND_NO_STROKE",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BG_STYLE_UNKNOWN" => Some(Self::Unknown),
            "BG_STYLE_FILL" => Some(Self::Fill),
            "BG_STYLE_STROKE" => Some(Self::Stroke),
            "BG_STYLE_FILL_AND_STROKE" => Some(Self::FillAndStroke),
            "BG_STYLE_NO_FILL_AND_NO_STROKE" => Some(Self::NoFillAndNoStroke),
            _ => None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum ModuleType {
    ///
    Unknown = 0,
    ///
    Toview = 1,
    ///
    RecentFav = 2,
    ///
    HalfWatchedVideo = 3,
}
impl ModuleType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unknown => "MODULE_TYPE_UNKNOWN",
            Self::Toview => "MODULE_TYPE_TOVIEW",
            Self::RecentFav => "MODULE_TYPE_RECENT_FAV",
            Self::HalfWatchedVideo => "MODULE_TYPE_HALF_WATCHED_VIDEO",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "MODULE_TYPE_UNKNOWN" => Some(Self::Unknown),
            "MODULE_TYPE_TOVIEW" => Some(Self::Toview),
            "MODULE_TYPE_RECENT_FAV" => Some(Self::RecentFav),
            "MODULE_TYPE_HALF_WATCHED_VIDEO" => Some(Self::HalfWatchedVideo),
            _ => None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum RecType {
    ///
    Unknown = 0,
    ///
    Ugc = 1,
    ///
    Ogv = 2,
    ///
    Season = 3,
    ///
    FavFolder = 4,
}
impl RecType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unknown => "REC_TYPE_UNKNOWN",
            Self::Ugc => "REC_TYPE_UGC",
            Self::Ogv => "REC_TYPE_OGV",
            Self::Season => "REC_TYPE_SEASON",
            Self::FavFolder => "REC_TYPE_FAV_FOLDER",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "REC_TYPE_UNKNOWN" => Some(Self::Unknown),
            "REC_TYPE_UGC" => Some(Self::Ugc),
            "REC_TYPE_OGV" => Some(Self::Ogv),
            "REC_TYPE_SEASON" => Some(Self::Season),
            "REC_TYPE_FAV_FOLDER" => Some(Self::FavFolder),
            _ => None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum RecentRecReasonEnum {
    ///
    RecentRecReasonUnknown = 0,
    ///
    RecentRecReasonToview = 1,
    /// @Deprecated
    RecentRecReasonHistory = 2,
    ///
    RecentRecReasonFavFolder = 21,
    ///
    RecentRecReasonFavDetail = 22,
    ///
    RecentRecReasonDeepWatchingHalf = 31,
    ///
    RecentRecReasonLookBackHalf = 32,
    ///
    RecentRecReasonLookBackMoreHalf = 33,
    ///
    RecentRecReasonLookBackMore = 34,
}
impl RecentRecReasonEnum {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::RecentRecReasonUnknown => "RECENT_REC_REASON_UNKNOWN",
            Self::RecentRecReasonToview => "RECENT_REC_REASON_TOVIEW",
            Self::RecentRecReasonHistory => "RECENT_REC_REASON_HISTORY",
            Self::RecentRecReasonFavFolder => "RECENT_REC_REASON_FAV_FOLDER",
            Self::RecentRecReasonFavDetail => "RECENT_REC_REASON_FAV_DETAIL",
            Self::RecentRecReasonDeepWatchingHalf => {
                "RECENT_REC_REASON_DEEP_WATCHING_HALF"
            }
            Self::RecentRecReasonLookBackHalf => "RECENT_REC_REASON_LOOK_BACK_HALF",
            Self::RecentRecReasonLookBackMoreHalf => {
                "RECENT_REC_REASON_LOOK_BACK_MORE_HALF"
            }
            Self::RecentRecReasonLookBackMore => "RECENT_REC_REASON_LOOK_BACK_MORE",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "RECENT_REC_REASON_UNKNOWN" => Some(Self::RecentRecReasonUnknown),
            "RECENT_REC_REASON_TOVIEW" => Some(Self::RecentRecReasonToview),
            "RECENT_REC_REASON_HISTORY" => Some(Self::RecentRecReasonHistory),
            "RECENT_REC_REASON_FAV_FOLDER" => Some(Self::RecentRecReasonFavFolder),
            "RECENT_REC_REASON_FAV_DETAIL" => Some(Self::RecentRecReasonFavDetail),
            "RECENT_REC_REASON_DEEP_WATCHING_HALF" => {
                Some(Self::RecentRecReasonDeepWatchingHalf)
            }
            "RECENT_REC_REASON_LOOK_BACK_HALF" => Some(Self::RecentRecReasonLookBackHalf),
            "RECENT_REC_REASON_LOOK_BACK_MORE_HALF" => {
                Some(Self::RecentRecReasonLookBackMoreHalf)
            }
            "RECENT_REC_REASON_LOOK_BACK_MORE" => Some(Self::RecentRecReasonLookBackMore),
            _ => None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Tab {
    ///
    Unknown = 0,
    ///
    Listen = 1,
    ///
    Story = 2,
    ///
    Recent = 3,
}
impl Tab {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unknown => "TAB_UNKNOWN",
            Self::Listen => "TAB_LISTEN",
            Self::Story => "TAB_STORY",
            Self::Recent => "TAB_RECENT",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "TAB_UNKNOWN" => Some(Self::Unknown),
            "TAB_LISTEN" => Some(Self::Listen),
            "TAB_STORY" => Some(Self::Story),
            "TAB_RECENT" => Some(Self::Recent),
            _ => None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum TabSelection {
    ///
    TsUnknown = 0,
    ///
    TsOnlyListen = 1,
    ///
    TsOnlyStory = 2,
    ///
    TsOnlyRecent = 3,
    ///
    TsAll = 4,
}
impl TabSelection {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::TsUnknown => "TS_UNKNOWN",
            Self::TsOnlyListen => "TS_ONLY_LISTEN",
            Self::TsOnlyStory => "TS_ONLY_STORY",
            Self::TsOnlyRecent => "TS_ONLY_RECENT",
            Self::TsAll => "TS_ALL",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "TS_UNKNOWN" => Some(Self::TsUnknown),
            "TS_ONLY_LISTEN" => Some(Self::TsOnlyListen),
            "TS_ONLY_STORY" => Some(Self::TsOnlyStory),
            "TS_ONLY_RECENT" => Some(Self::TsOnlyRecent),
            "TS_ALL" => Some(Self::TsAll),
            _ => None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum TabUpdateSource {
    ///
    SourceRecent = 0,
    ///
    SourceGame = 1,
}
impl TabUpdateSource {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::SourceRecent => "SOURCE_RECENT",
            Self::SourceGame => "SOURCE_GAME",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "SOURCE_RECENT" => Some(Self::SourceRecent),
            "SOURCE_GAME" => Some(Self::SourceGame),
            _ => None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum TopLeftGoto {
    ///
    GotoUnknown = 0,
    ///
    GotoMine = 1,
    ///
    GotoRecent = 2,
}
impl TopLeftGoto {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::GotoUnknown => "GOTO_UNKNOWN",
            Self::GotoMine => "GOTO_MINE",
            Self::GotoRecent => "GOTO_RECENT",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GOTO_UNKNOWN" => Some(Self::GotoUnknown),
            "GOTO_MINE" => Some(Self::GotoMine),
            "GOTO_RECENT" => Some(Self::GotoRecent),
            _ => None,
        }
    }
}
